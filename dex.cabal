cabal-version:       2.2

-- Copyright 2019 Google LLC
--
-- Use of this source code is governed by a BSD-style
-- license that can be found in the LICENSE file or at
-- https://developers.google.com/open-source/licenses/bsd

name:                dex
version:             0.1.0.0
author:              Dougal Maclaurin
maintainer:          dougalm@google.com
license-file:        LICENSE
build-type:          Simple

data-files:          lib/*.dx, static/*.html, static/*.js, static/*.css
extra-source-files:  lib/*.dx,
                     src/lib/dexrt.bc,
                     static/index.js, static/style.css

flag cuda
  description:         Enables building with CUDA support
  default:             False

flag optimized
  description:         Enables GHC optimizations
  default:             False

flag live
  description:         Enables live-editing environments (web notebook and terminal)
  default:             True

flag llvm-head
  description:         Use the bleeding-edge version of LLVM
  default:             False

flag foreign
  description:         Build the C interface to Dex
  default:             True

flag safe-names
  description:         Enables building with safe names checks
  default:             False

library dex-resources
  if os(darwin)
    exposed-modules:   Resources
  build-depends:       base, bytestring, file-embed
  hs-source-dirs:      src/resources
  default-language:    Haskell2010
  default-extensions:  CPP

library
  exposed-modules:     Env, Syntax, Type, Inference,
                       Parser, Util, Imp, Imp.Builder, Imp.Optimize,
                       PPrint, Algebra, Parallelize, Optimize, Serialize
                       Builder, Cat,
                       Simplify, TopLevel,
                       Autodiff, Interpreter, Logging, CUDA,
                       LLVM.JIT, LLVM.Shims, JIT, LLVMExec, Export
                       Err, LabeledItems, SourceRename,
                       SaferNames.Name, SaferNames.LazyMap,
                       SaferNames.Syntax, SaferNames.Bridge,
                       SaferNames.PPrint, SaferNames.Parser,
                       SaferNames.ResolveImplicitNames, SaferNames.SourceRename,
                       SaferNames.Type, SaferNames.Builder, SaferNames.Inference,
                       SaferNames.CheapReduction
  if flag(live)
    exposed-modules:   Actor, RenderHtml, LiveOutput
  other-modules:       Paths_dex
  build-depends:       base, containers, mtl, bytestring,
                       llvm-hs-pure, llvm-hs, transformers,
                       -- Parsing
                       megaparsec, parser-combinators,
                       -- Text output
                       prettyprinter, text,
                       -- Portable system utilities
                       filepath, directory, ansi-terminal, process, temporary, haskeline,
                       -- Serialization
                       store, aeson
  if flag(live)
    build-depends:     warp, wai, blaze-html, http-types, cmark, binary
    cpp-options:       -DDEX_LIVE
    cxx-options:       -DDEX_LIVE
  if flag(safe-names)
    cpp-options:       -DDEX_SAFE_NAMES
    cxx-options:       -DDEX_SAFE_NAMES
  if !os(darwin)
    exposed-modules:   Resources
    hs-source-dirs:    src/resources
    build-depends:     file-embed
  else
    build-depends:     dex-resources
  default-language:    Haskell2010
  hs-source-dirs:      src/lib
  ghc-options:         -Wall -fPIC -optP-Wno-nonportable-include-path
                       -Wno-unticked-promoted-constructors
  cxx-sources:         src/lib/dexrt.cpp
  cxx-options:         -std=c++11 -fPIC
  default-extensions:  CPP, DeriveTraversable, TypeApplications, OverloadedStrings,
                       TupleSections, ScopedTypeVariables, LambdaCase, PatternSynonyms,
                       BlockArguments, GADTs, TypeOperators, DataKinds, KindSignatures
                       ConstraintKinds, FlexibleContexts, RankNTypes, QuantifiedConstraints,
                       TypeOperators, MultiParamTypeClasses, FunctionalDependencies
  pkgconfig-depends:   libpng
  if flag(cuda)
    include-dirs:      /usr/local/cuda/include
    extra-libraries:   cuda
    cxx-options:       -DDEX_CUDA
    cpp-options:       -DDEX_CUDA
  if flag(optimized)
    ghc-options:       -O3
  else
    ghc-options:       -O0
  if flag(llvm-head)
    cpp-options:       -DDEX_LLVM_VERSION=HEAD
    build-depends:     mlir-hs
    exposed-modules:   LLVM.HEAD.JIT,
                       MLIR.Lower, MLIR.Eval
  else
    cpp-options:       -DDEX_LLVM_VERSION=9
    exposed-modules:   LLVM.V9.JIT, LLVM.V9.Shims

executable dex
  main-is:             dex.hs
  other-extensions:    OverloadedStrings
  build-depends:       dex, base, containers, haskeline, prettyprinter, mtl,
                       optparse-applicative, ansi-wl-pprint,
                       unix, store, bytestring, directory
  if os(darwin)
    build-depends:     dex-resources
  default-language:    Haskell2010
  hs-source-dirs:      src
  default-extensions:  CPP, LambdaCase, BlockArguments
  ghc-options:         -threaded -optP-Wno-nonportable-include-path
  if flag(cuda)
    cpp-options:       -DDEX_CUDA
  if flag(live)
    cpp-options:       -DDEX_LIVE
  if flag(optimized)
    ghc-options:       -O3
  else
    ghc-options:       -O0

foreign-library Dex
  if flag(foreign)
    buildable: True
  else
    buildable: False
  type:                native-shared
  other-modules:       Dex.Foreign.API, Dex.Foreign.Util, Dex.Foreign.JIT
                     , Dex.Foreign.Context, Dex.Foreign.Serialize
  build-depends:       base, mtl, containers, llvm-hs, dex
  if os(darwin)
    build-depends:     dex-resources
  hs-source-dirs:      src/
  c-sources:           src/Dex/Foreign/rts.c
  cc-options:          -std=c11 -fPIC
  ghc-options:         -Wall -fPIC -optP-Wno-nonportable-include-path
  default-language:    Haskell2010
  default-extensions:  TypeApplications, ScopedTypeVariables, LambdaCase,
                       BlockArguments
  if flag(optimized)
    ghc-options:       -O3
  else
    ghc-options:       -O0
